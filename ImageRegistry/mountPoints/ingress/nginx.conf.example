events {
    use           epoll;
    worker_connections  128;
}
http {
	ssl_certificate /etc/nginx/conf.d/ca/cert.crt;
 	ssl_certificate_key /etc/nginx/conf.d/ca/cert.key;
	ssl_session_timeout  5m;
	ssl_protocols        SSLv3 TLSv1;
	ssl_ciphers          ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+EXP;
	ssl_prefer_server_ciphers   on;

	server {
    	listen      80;
    	listen [::]:80;
    	server_name scratch.example.com;

    	location / {
        	proxy_pass http://scratch.example.com:7125;
    	}
	}
	server {
    	listen      80;
    	listen [::]:80;
    	server_name ca.example.com;

		# this is the internal Docker DNS, cache only for 30s
    	resolver 127.0.0.11 valid=30s;
		return 301 https://$host$request_uri;
	}
	server {
    	ssl_certificate /etc/nginx/conf.d/ca/cert.crt;
 	 	ssl_certificate_key /etc/nginx/conf.d/ca/cert.key;
	 	ssl_session_timeout  5m;
	 	ssl_protocols        TLSv1 TLSv1.1 TLSv1.2;
	 	ssl_ciphers         HIGH:!aNULL:!MD5;
	 	ssl_prefer_server_ciphers   on;

     	listen      443 ssl;
     	listen [::]:443 ssl;
     	server_name ca.example.com;

	 	# this is the internal Docker DNS, cache only for 30s
     	resolver 127.0.0.11 valid=5s;
     	location / {
		 	proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
	 		set $upstream http://ca.example.com:3081;
         	proxy_pass $upstream;

			 proxy_redirect http://ca.example.com:3040 https://ca.example.com;
     	}
	}
}