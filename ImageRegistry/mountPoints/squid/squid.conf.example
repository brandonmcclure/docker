#####
# acl
#  http://www.squid-cache.org/Versions/v4/cfgman/acl.html
#  Every access list definition must begin with an aclname and acltype, followed by either type-specific arguments 
#  or a quoted filename that they are read from
#   acl <name> <type> <options> <argument|file>

# http_acces acl
acl localnet src 0.0.0.1-0.255.255.255
acl SSL_ports port 443 
acl Safe_ports port 80          # http
acl Safe_ports port 21          # ftp
acl Safe_ports port 443         # https
acl Safe_ports port 70          # gopher
acl Safe_ports port 210         # wais
acl Safe_ports port 1025-65535  # unregistered ports
acl Safe_ports port 280         # http-mgmt
acl Safe_ports port 488         # gss-http
acl Safe_ports port 591         # filemaker
acl Safe_ports port 777         # multiling http
acl CONNECT method CONNECT
# sslproxy_cert_error acl
acl ssl_error_domains dstdomain "/etc/squid/ssl/error/domains.conf"    
acl ssl_error_ips     dst       "/etc/squid/ssl/error/ips.conf"
# ssl_bump acl
acl step1 at_step SslBump1
acl step2 at_step SslBump2
acl step3 at_step SslBump3
acl ssl_skip_bump req_header X-SSL-Bump -i skip
acl ssl_force_bump req_header X-SSL-Bump -i force
acl ssl_exclude_domains   ssl::server_name "/etc/squid/ssl/exclude/domains.conf"
acl ssl_exclude_ips       dst              "/etc/squid/ssl/exclude/ips.conf"            
acl ssl_exclude_useraddr  src              "/etc/squid/ssl/exclude/useraddr.conf"
acl ssl_exclude_useragent browser -i       "/etc/squid/ssl/exclude/useragent.conf"    
# cache acl
acl cache_exclude_domainaddr dst           "/etc/squid/cache/exclude/domainaddr.conf"    
acl cache_exclude_domainname dstdomain     "/etc/squid/cache/exclude/domainname.conf"
acl cache_exclude_useraddr   src           "/etc/squid/cache/exclude/useraddr.conf"    
acl cache_exclude_useragent  browser -i    "/etc/squid/cache/exclude/useragent.conf"    
# send_hit acl
acl cache_exclude_contenttype rep_mime_type "/etc/squid/cache/exclude/contenttype.conf"

#############
# http_access
#  http://www.squid-cache.org/Versions/v4/cfgman/http_access.html
#  Allowing or Denying access based on defined access lists
http_access deny !Safe_ports
http_access deny CONNECT !SSL_ports
http_access allow localhost manager
http_access deny manager
http_access allow localnet
http_access allow localhost
http_access deny all

###########
# http_port
#  http://www.squid-cache.org/Versions/v4/cfgman/http_port.html
#  The socket addresses where Squid will listen for HTTP client requests (proxy port)
#  - mode: ssl-bump
#     For each CONNECT request allowed by ssl_bump ACLs, establish secure connection with the client and with
#     the server, decrypt HTTPS messages as they pass through Squid, and treat them as unencrypted HTTP messages,
#     becoming the man-in-the-middle.
#  - SSL Bump Mode Option: generate-host-certificates, dynamic_cert_mem_cache_size
#      - Dynamically create SSL server certificates for the destination hosts of bumped CONNECT requests
#      - Approximate total RAM size spent on cached generated certificates
#  - cert: Path to file containing the X.509 certificate (PEM format) and provate key to be used in the TLS handshake ServerHello
#      Generate (cert+key):
#       $ openssl req -new -newkey rsa:4096 -sha256 -days 3650 -nodes -x509 -keyout myca.pem -out myca.pem
#      and import myca.pem into your browser (certificates -> autorities)
http_port 3128 \
  ssl-bump \
  generate-host-certificates=on \
  dynamic_cert_mem_cache_size=4MB \
  cert=/opt/conf/certs/cert.crt \
  key=/opt/conf/certs/cert.key

#####################
# sslproxy_cert_error
#  Bypass server certificate validation errors for destination (ips, domains and submnets)
#  http://www.squid-cache.org/Versions/v4/cfgman/sslproxy_cert_error.html
sslproxy_cert_error allow ssl_error_domains
sslproxy_cert_error allow ssl_error_ips

##########
# ssl_bump
#  http://www.squid-cache.org/Versions/v4/cfgman/ssl_bump.html
#  Consulted when a CONNECT request is received on an http_port
#  The subsequent data on the connection is either treated as HTTPS and decrypted OR tunneled at TCP level without decryption,
#  depending on the first matching bumping "action":
#  - splice: become a TCP tunnel without decrypting proxied traffic
#  - peek: receive client or server certificate while preserving the possibility of splicing the connection
#  - bump: establishes a secure connection with the client and server

# just tunnel (no decryption) on SSL request header match
ssl_bump splice localhost
ssl_bump splice ssl_skip_bump
# peek on SslBump1 step
ssl_bump peek step1 all
# force bump (decryption) on SSL request header match
ssl_bump bump ssl_force_bump
# just tunnel (no decryption) based on whitelisting (domains, ips, src/dest, user-agent)
ssl_bump splice ssl_exclude_domains
ssl_bump splice ssl_exclude_ips
ssl_bump splice ssl_exclude_useraddr
ssl_bump splice ssl_exclude_useragent
# To disable decryption (bump) uncomment line "ssl_bump splice all" and comment "sspl_bump bump all"
#ssl_bump splice all
ssl_bump bump all

#################
# sslcrtd_program
#  http://www.squid-cache.org/Versions/v4/cfgman/sslcrtd_program.html
#  certificate generator executable
sslcrtd_program /usr/lib/squid/security_file_certgen -s /var/lib/ssl_db -M 4MB
sslcrtd_children 3 startup=1 idle=1

#######
# cache
#  http://www.squid-cache.org/Versions/v4/cfgman/cache.html
#  Requests denied by this directive will not be served from the cache and their responses will not be stored in the cache
cache deny cache_exclude_domainname
cache deny cache_exclude_domainaddr
cache deny cache_exclude_useraddr
cache deny cache_exclude_useragent

##########
# send_hit
#  http://www.squid-cache.org/Versions/v4/cfgman/send_hit.html
#  Responses denied by this directive will not be served from the cache (but may still be cached, see store_miss)
send_hit deny cache_exclude_contenttype

############
# store_miss
#  http://www.squid-cache.org/Versions/v4/cfgman/store_miss.html
#  Responses denied by this directive will not be cached (but may still be served from the cache, see send_hit)
store_miss deny cache_exclude_contenttype

#################
# refresh_pattern
#  http://www.squid-cache.org/Versions/v4/cfgman/refresh_pattern.html
#  Regexp based expiration rules
refresh_pattern ^ftp:       1440    20% 10080
refresh_pattern ^gopher:    1440    0%  1440
refresh_pattern -i (/cgi-bin/|\?) 0 0%  0
refresh_pattern .       0   20% 4320

###################
# shutdown_lifetime
#  http://www.squid-cache.org/Versions/v4/cfgman/shutdown_lifetime.html
#  Any active clients after this many seconds will receive a 'timeout' message.
shutdown_lifetime 10 seconds

###########
# logformat
#  http://www.squid-cache.org/Versions/v4/cfgman/logformat.html
logformat squid-cs %{%Y-%m-%d %H:%M:%S}tl %3tr %>a %Ss/%03>Hs %<st %rm %>ru %un %Sh/%<a %mt "%{User-Agent}>h" "SQUID-CS" %>st %note
access_log /var/log/squid/access.log squid-cs

##################
# various config options
#  http://www.squid-cache.org/Versions/v4/cfgman/visible_hostname.html
#  http://www.squid-cache.org/Versions/v4/cfgman/dns_v4_first.html
#  http://www.squid-cache.org/Versions/v4/cfgman/forwarded_for.html
visible_hostname proxy.example.com
dns_v4_first on
forwarded_for on
