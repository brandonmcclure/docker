version: '3.5'

services:
  registry_mirror:
    hostname: registry_mirror
    restart: ${RESTART_POLICY}
    image: registry:2.7.1
    ports:
      - "5002:5000"
      - "5003:5001"
    volumes:
      - registryMirror_data:/var/lib/registry
      - ./mountPoints/registryMirror/config.yml:/etc/docker/registry/config.yml
    networks:
      - overlay
  registry:
    image: registry:2.7.1
    restart: ${RESTART_POLICY}
    ports:
      - "5001:5001"
    volumes:
      - registry_data:/var/lib/registry
      - ./mountPoints/registry/config.yml:/etc/docker/registry/config.yml
    labels:
      # Adding this label means this container should be stopped while it's being backed up:
      - "docker-volume-backup.stop-during-backup=true"
    networks:
      - overlay
   # This is a cool image to help take backups of volumes. You can take a manual backup of the running volume by executing:
   # docker-compose exec backup ./backup.sh
   # See https://github.com/futurice/docker-volume-backup for more info
  registry_backup:
    depends_on:
      - registry
    image: futurice/docker-volume-backup
    restart: ${RESTART_POLICY}
    environment:
      BACKUP_CRON_EXPRESSION: "0 20 * * *"
      HTTP_PROXY: $HTTP_PROXY
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Allow use of the "stop-during-backup" feature
      - registry_data:/backup/registry_data:ro    # Mount the registry data volume (as read-only)
      - ./backups/registry:/archive                      # Mount a local folder as the backup archive
    networks:
      - overlay
  registryui:
    depends_on:
      - registry
    image: quiq/docker-registry-ui
    restart: ${RESTART_POLICY}
    env_file: registry.env
    volumes:
      - ./mountPoints/registryUI/config.yml:/opt/config.yml
    networks:
      - overlay
volumes:
  registry_data:
  registryMirror_data:
networks:
    overlay:
        driver: overlay